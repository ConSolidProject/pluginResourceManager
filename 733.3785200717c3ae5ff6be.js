(self.webpackChunkresourcemanager=self.webpackChunkresourcemanager||[]).push([[733],{52333:(e,t,r)=>{const{prefixes:o}=r(40276),{queryComunica:a}=r(4804);async function n(e,t){const r=o+"\n    SELECT ?item WHERE {\n      ?s ldp:contains ?item .\n    }";return"string"==typeof e&&(e=[e]),(await a(r,e,null,t)).results.bindings.map((e=>e.item.value))}async function s(e,t,r){try{var o={method:"PATCH",headers:{"Content-Type":"application/sparql-update"},body:e,redirect:"follow"};let a;return void(a=await r.fetch(t,o))}catch(e){throw console.log("error",e),e}}async function c(e,t){try{return void await t.fetch(e,{method:"DELETE"})}catch(e){console.log("error",e)}}e.exports={getLbdlocation:async function(e,t){try{const r=o+`select ?loc where {<${e}> lbd:hasProjectRegistry ?loc}`;return(await a(r,[e],null,t)).results.bindings[0].loc.value}catch(e){return}},getLbdlocations:async function(e,t){const r=o+"select ?st ?loc where {?st lbd:hasProjectRegistry ?loc}";return(await a(r,e,null,t)).results.bindings.map((e=>({stakeholder:e.st.value,location:e.loc.value})))},createLbdLocation:async function(e,t){try{const r=e.replace("/profile/card#me","/lbd/"),a=o+`INSERT DATA {\n      <${e}> lbd:hasProjectRegistry <${r}> .\n    }`;return await s(a,e,t),r}catch(e){throw console.log("error",e),e}},getLdpMembers:n,update:s,createContainer:async function(e,t){try{e.endsWith("/")||(e=e.concat("/"));const r={method:"PUT",headers:{"Content-Type":"text/turtle"},redirect:"follow"};return void await t.fetch(e,r)}catch(e){throw e.message=`Unable to create container - ${e.message}`,e}},uploadResource:async function(e,t,r,o){try{if(!r.overwrite){const t=await async function(e,t){try{const r={method:"HEAD"};return 200===(await t.fetch(e,r)).status}catch(t){throw t.message=`Could not check existence of graph ${e} - ${t.message}`,t}}(e,o);if(t)throw new Error("Resource already exists")}let n;console.log("options",r),r.mimeType?n=r.mimeType:(n=mime.lookup(e),!1===n&&(n="text/plain"));var a={method:"PUT",headers:{"Content-Type":n},body:t,redirect:"follow"};let s;return void(s=await o.fetch(e,a))}catch(e){throw console.log("error",e),e.message=`Unable to upload resource - ${e.message}`,e}},deleteResource:c,deleteContainer:async function(e,t){const r=await n(e,t);for(const e of r)await c(e,t);await c(e,t)},getAccessRightsAsk:async function(e,t,r,o){const a=[];for(const e of r)acl.boolean&&a.push(e);return a}}},7597:(e,t,r)=>{const{getSatellite:o,queryComunica:a}=r(4804),{parse:n}=r(71695),s=r(21381),{getLdpMembers:c}=r(11625);e.exports={getDataset:async function(e,t,r){try{const o={};r&&r.headers&&(o.headers=r.headers);const a=await t.fetch(e,{method:"GET"}).then((e=>e.text())),c=n(a),i={dc:"http://purl.org/dc/terms/",dcat:"http://www.w3.org/ns/dcat#"},l=await s.compact(c,i);return l.active=!1,l["text/turtle"]=a,l}catch(e){console.log("error",e)}},createDataset:async function(e,t,r,a){try{const r=await o(a.info.webId,a),n={method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(t)},s=await a.fetch(`${r}/${e}/dataset`,n).then((e=>e.text()));return console.log("data",s),s}catch(e){throw console.log("error creating dataset",e),e}},deleteDataset:async function(e,t,r,a){try{const r=await o(a.info.webId,a);return await a.fetch(`${r}/${e}/dataset?dataset=${t}`,{method:"DELETE"}),data}catch(e){throw console.log("error deleting dataset",e),e}},getDatasetsOfPartial:async function(e,t){const r=await a("select ?i where {?p <https://lbdserver.org/vocabulary#datasetRegistry> ?i}",[e],{results:!0,single:!0,variable:"i"},t),o=await c(r,t),n=[];for(const e of o)try{const r=await a("select ?i where {?p <http://purl.org/dc/terms/title> ?i}",[e],{results:!0,single:!0,variable:"i"},t);n.push({url:e,title:r})}catch(e){console.log("error",e)}return n}}},62599:(e,t,r)=>{const{getSatellite:o,queryComunica:a}=r(4804);e.exports={getDistribution:async function(e,t){return await t.fetch(e).then((e=>["application/json","application/ld+json"].includes(e.headers["Content-Type"])?e.json():e.text()))},createDistribution:async function(e,t,r,a,n){try{const a=await o(n.info.webId,n),s={method:"POST",body:r},c=await fetch(`${a}/${e}/distribution?dataset=${t}`,s).then((e=>e.text()));return console.log("res",c),c}catch(e){throw console.log("error creating dataset",e),e}},deleteDistribution:async function(e,t,r,a,n){try{const a=await o(n.info.webId,n);return await n.fetch(`${a}/${e}/distribution?dataset=${r}&distribution=${t}`,{method:"DELETE"}),data}catch(e){throw console.log("error deleting dataset",e),e}},getDistributionsByMediaType:async function(e,t,r){try{const o=[];for(const n of t){const t=`prefix dcat: <http://www.w3.org/ns/dcat#>\n      SELECT ?dataset ?url WHERE {\n        ?dataset dcat:distribution ?dist .\n        ?dist <http://purl.org/dc/terms/format> <https://www.iana.org/assignments/media-types/${n}> ;\n          dcat:accessURL ?url .\n      }`,s=await a(t,e,{results:!0},r);s&&s.forEach((e=>o.push({dataset:e.dataset.value,url:e.url.value})))}return o}catch(e){console.log("error",e)}}}},35733:(e,t,r)=>{const{createProject:o,getProjects:a,getProject:n,getProjectAccessPoint:s,getProjectMembers:c,deleteProject:i}=r(59723),{getLdpMembers:l}=r(11625),{findReferenceEndpoints:d}=r(55526),{createDataset:u,getDataset:g,getDatasetsOfPartial:h}=r(7597),{createDistribution:f,getDistributionsByMediaType:w}=r(62599),{getSatellite:p,queryComunica:y}=r(4804);e.exports={createProject:o,getProjects:a,getProject:n,getProjectAccessPoint:s,getProjectMembers:c,deleteProject:i,queryComunica:y,getSatellite:p,createDistribution:f,createDataset:u,getDataset:g,getLdpMembers:l,findReferenceEndpoints:d,getDatasetsOfPartial:h,getDistributionsByMediaType:w}},59723:(e,t,r)=>{const{queryComunica:o,getSatellite:a}=r(4804),{getLbdlocation:n,getLdpMembers:s}=r(52333),{prefixes:c}=r(40276);async function i(e,t){const r=c+"SELECT * WHERE {\n        ?proj lbd:hasProjectId ?id ;\n            lbd:referenceRegistry ?ref ;\n            lbd:datasetRegistry ?ds ;\n            lbd:distributionRepository ?dist ;\n            lbd:services ?serv ;\n            lbd:members ?members .\n        }",a=await o(r,[e],{},t);if(a&&a.results.bindings.length>0){const e=a.results.bindings[0],r=c+"SELECT ?aURL WHERE {?s dcat:accessURL ?aURL}",n=c+"SELECT ?dURL WHERE {?s dcat:downloadURL ?dURL}",s=await o(r,[e.ref.value],{},t),i=await o(n,[e.ref.value],{},t);let l,d;return s.results.bindings.length>0&&(d=s.results.bindings[0].aURL.value),i.results.bindings.length>0&&(l=i.results.bindings[0].dURL.value),{proj:e.proj.value,id:e.id.value,ref:{index:e.ref.value,downloadURL:l,accessURL:d},ds:e.ds.value,dist:e.dist.value,members:e.members.value,services:e.serv.value}}throw new Error("could not find required information")}async function l(e,t){const r=c+"\n    SELECT ?st WHERE {\n      ?s vcard:hasMember ?st .\n    }",a=await o(r,[e],{},t);return(await a.results.bindings).map((e=>e.st.value))}e.exports={createProject:async function(e,t,r,o){try{const r=t.filter((e=>e.length>0)),n=await a(o.info.webId,o),s={method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({stakeholders:r})};return await o.fetch(`${n}/${e}`,s)}catch(e){console.log("error",e)}},getProjects:async function(e,t){const r=await n(e,t);console.log("lbdLocation",r);const o=await s([`${r}`],t);console.log("p",o);const a=[];for(const e of o){const r=await t.fetch(e,{headers:{accept:"application/ld+json"}}).then((e=>e.json()));a.push(r)}return o},getProject:async function(e,t,r){try{let o;r.owner||(o=t.info.webId),console.log("session.info.webId",t.info.webId);const a=await n(o,t)+e+"/",c=await i(a,t),d=await l(c.members,t),u={};for(const r of d)try{const o=await n(r,t)+e+"/",a=await i(o,t),c=await s([a.ds],t);a.ds={registry:a.ds,datasets:c},console.log("projectInfo",a),u[r]=a}catch(e){console.log(`error, for member ${r}: `,e,r)}return console.log("data",u),u}catch(e){throw console.log("error",e),e}},getProjectAccessPoint:i,getProjectMembers:l,deleteProject:async function(e,t){const r=await a(t);return await t.fetch(r+"/"+e,{method:"DELETE"})}}},4804:(e,t,r)=>{const o=r(81092).newEngine,a=r(66042).Buffer;async function n(e,t,r,n){try{const s=o();"string"==typeof t&&(t=[t]);const c=[];for(const e of t)200==(await n.fetch(e,{method:"HEAD"})).status&&c.push(e);if(c.length>0){const t=await s.query(e,{sources:c,fetch:n.fetch}),{data:o}=await s.resultToString(t,"application/sparql-results+json");if(s.invalidateHttpCache(),r&&r.asStream)return o;{const e=await function(e){const t=[];return new Promise(((r,o)=>{e.on("data",(e=>t.push(a.from(e)))),e.on("error",(e=>o(e))),e.on("end",(()=>{r(JSON.parse(a.concat(t).toString("utf8")))}))}))}(o);if(r&&r.results){if(!r.single)return e.results.bindings;if(r.variable)return e.results.bindings[0][r.variable].value}return e}}return}catch(e){console.log("error",e)}}e.exports={queryComunica:n,getSatellite:async function(e,t){const r=`select ?sat where {<${e}> <https://lbdserver.org/vocabulary#satellite> ?sat}`;return(await n(r,[e],{},t)).results.bindings[0].sat.value}}},55526:(e,t,r)=>{const{getLdpMembers:o}=r(11625),{queryComunica:a}=r(4804);e.exports={findReferenceEndpoints:async function(e,t){const r=[];for(const o of e)try{const e=await a("select ?i where {?p <https://lbdserver.org/vocabulary#satellite> ?i}",[o],{results:!0,single:!0,variable:"i"},t);r.push(e)}catch(e){console.log("error",e)}return r}}},71352:(e,t,r)=>{const{prefixes:o}=r(40276),{queryComunica:a}=r(4804);e.exports={getLbdlocation:async function(e,t){try{const r=o+`select ?loc where {<${e}> lbd:hasProjectRegistry ?loc}`;return(await a(r,[e],null,t)).results.bindings[0].loc.value}catch(e){return}},getLbdlocations:async function(e,t){const r=o+"select ?st ?loc where {?st lbd:hasProjectRegistry ?loc}";return(await a(r,e,null,t)).results.bindings.map((e=>({stakeholder:e.st.value,location:e.loc.value})))},createLbdLocation:async function(e,t){try{const r=e.replace("/profile/card#me","/lbd/"),a=o+`INSERT DATA {\n        <${e}> lbd:hasProjectRegistry <${r}> .\n      }`;return await update(a,e,t),r}catch(e){throw console.log("error",e),e}},getSatellite:async function(e,t){const r=`select ?sat where {<${e}> <https://lbdserver.org/vocabulary#hasSatellite> ?sat}`;return(await a(r,[e],{},t)).results.bindings[0].sat.value},getProjectAccessPoint:async function(e,t,r){const n=o+"SELECT * WHERE {\n      ?proj lbd:hasProjectId ?id ;\n          lbd:referenceRegistry ?ref ;\n          lbd:datasetRegistry ?ds ;\n          lbd:services ?serv ;\n          lbd:satellite ?sat .\n      }",s=await a(n,[e],{},r);if(s&&s.results.bindings.length>0){const e=s.results.bindings[0],n=o+"SELECT ?aURL WHERE {?s dcat:accessURL ?aURL}",c=o+"SELECT ?dURL WHERE {?s dcat:downloadURL ?dURL}",i=await a(n,[e.ref.value],{},r),l=await a(c,[e.ref.value],{},r);let d,u;return i.results.bindings.length>0&&(u=i.results.bindings[0].aURL.value),l.results.bindings.length>0&&(d=l.results.bindings[0].dURL.value),{accessPoint:e.proj.value,owner:t,id:e.id.value,satellite:e.sat.value,references:e.ref.value,datasets:e.ds.value,services:e.serv.value}}throw new Error("could not find required information")}}},11625:(e,t,r)=>{const{getLbdlocation:o,getLbdlocations:a,createLbdLocation:n}=r(71352),{getLdpMembers:s,update:c,createContainer:i,uploadResource:l,deleteResource:d,deleteContainer:u}=r(20313);e.exports={getLbdlocation:o,getLbdlocations:a,createLbdLocation:n,getLdpMembers:s,update:c,createContainer:i,uploadResource:l,deleteResource:d,deleteContainer:u}},20313:(e,t,r)=>{const{prefixes:o}=r(40276),{queryComunica:a}=r(4804);async function n(e,t){const r=o+"\n    SELECT ?item WHERE {\n      ?s ldp:contains ?item .\n    }";"string"==typeof e&&(e=[e]);const n=await a(r,e,null,t);return n?n.results.bindings.map((e=>e.item.value)):[]}async function s(e,t){try{return void await t.fetch(e,{method:"DELETE"})}catch(e){console.log("error",e)}}e.exports={getLdpMembers:n,update:async function(e,t,r){try{var o={method:"PATCH",headers:{"Content-Type":"application/sparql-update"},body:e,redirect:"follow"};let a;return void(a=await r.fetch(t,o))}catch(e){throw console.log("error",e),e}},createContainer:async function(e,t){try{e.endsWith("/")||(e=e.concat("/"));const r={method:"PUT",headers:{"Content-Type":"text/turtle"},redirect:"follow"};return void await t.fetch(e,r)}catch(e){throw e.message=`Unable to create container - ${e.message}`,e}},uploadResource:async function(e,t,r,o){try{if(!r.overwrite){const t=await async function(e,t){try{const r={method:"HEAD"};return 200===(await t.fetch(e,r)).status}catch(t){throw t.message=`Could not check existence of graph ${e} - ${t.message}`,t}}(e,o);if(t)throw new Error("Resource already exists")}let n;console.log("options",r),r.mimeType?n=r.mimeType:(n=mime.lookup(e),!1===n&&(n="text/plain"));var a={method:"PUT",headers:{"Content-Type":n},body:t,redirect:"follow"};let s;return void(s=await o.fetch(e,a))}catch(e){throw console.log("error",e),e.message=`Unable to upload resource - ${e.message}`,e}},deleteResource:s,deleteContainer:async function(e,t){const r=await n(e,t);for(const e of r)await s(e,t);await s(e,t)}}},40276:e=>{e.exports={prefixes:"\nprefix ldp: <http://www.w3.org/ns/ldp#> \nprefix lbd: <https://lbdserver.org/vocabulary#>\nprefix dcat: <http://www.w3.org/ns/dcat#>\nprefix dct: <http://purl.org/dc/terms/>\nprefix owl: <http://www.w3.org/2002/07/owl#> \nprefix vcard: <http://www.w3.org/2006/vcard/ns#> \n "}}}]);